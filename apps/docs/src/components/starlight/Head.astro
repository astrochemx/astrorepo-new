---
import { pwaInfo } from 'virtual:pwa-info';
import StarlightHead from '@astrojs/starlight/components/Head.astro';
import Linter from 'astro-vtbot/components/Linter.astro';
import LoadingIndicator from 'astro-vtbot/components/LoadingIndicator.astro';
import ProgressBar from 'astro-vtbot/components/ProgressBar.astro';
import VtbotStarlight from 'astro-vtbot/components/starlight/Base.astro';
---

{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

<VtbotStarlight>
  <Linter />
  <LoadingIndicator />
  <ProgressBar />
  <StarlightHead><slot /></StarlightHead>
</VtbotStarlight>

<script>
  import { registerSW } from 'virtual:pwa-register';
  // update interval: 10 minutes (10 min * 60 sec * 1000 ms)
  const intervalMS = 10 * 60 * 1000;
  registerSW({
    immediate: true,
    onRegisteredSW(swUrl, r) {
      console.log('SW registered: ', swUrl);
      r &&
        setInterval(async () => {
          if (r.installing || !navigator) return;
          if ('connection' in navigator && !navigator.onLine) return;
          const resp = await fetch(swUrl, {
            cache: 'no-store',
            headers: {
              'cache': 'no-store',
              'cache-control': 'no-cache',
            },
          });
          if (resp?.status === 200) await r.update();
        }, intervalMS);
    },
    onOfflineReady() {
      console.log('PWA application ready to work offline!');
    },
  });
</script>
